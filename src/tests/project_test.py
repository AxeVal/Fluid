import sys

import pytest
import numpy as np

sys.path.insert(1, '.')
sys.path.insert(1, 'src/')
from src.Simulation.Calculations import project

def arr_eq(arr1, arr2):
    return len(np.where(abs(arr1 - arr2) < 0.001))

def assert_array_equal(arr1, arr2):
    assert arr_eq(arr1, arr2), "Arrays are not equal"

@pytest.fixture
def input_data():
    N = 10
    velocX = np.ones((N, N))
    velocY = np.ones((N, N))
    p = np.ones((N, N))
    div = np.ones((N, N))
    return velocX, velocY, p, div, N

def test_project(input_data):
    result = project(*input_data)

    expected_velocX = [[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 7.929409923326391, 6.138740706870566, 5.7526299662145, 5.655616968402302, 5.587841060099452, 5.384663419098969, 4.5533670923724365, 1.0, 1.0], [1.0, 6.138740706870566, 3.2078834619870777, 2.4791611759936663, 2.283819155357203, 2.177654512168919, 1.927810946734915, 0.9999999999999999, -2.5533670923724365, 1.0], [1.0, 5.7526299662145, 2.4791611759936663, 1.6215567526545749, 1.3827092521941522, 1.260431799093761, 0.9999999999999999, 0.07218905326508507, -3.3846634190989695, 1.0], [1.0, 5.655616968402302, 2.283819155357203, 1.3827092521941522, 1.1277489418216227, 1.0, 0.739568200906239, -0.1776545121689188, -3.5878410600994517, 1.0], [1.0, 5.587841060099452, 2.177654512168919, 1.260431799093761, 1.0, 0.8722510581783773, 0.6172907478058478, -0.28381915535720337, -3.6556169684023017, 1.0], [1.0, 5.384663419098969, 1.927810946734915, 1.0000000000000002, 0.739568200906239, 0.6172907478058478, 0.378443247345425, -0.47916117599366626, -3.7526299662144993, 1.0], [1.0, 4.5533670923724365, 1.0, 0.07218905326508507, -0.1776545121689188, -0.28381915535720315, -0.47916117599366626, -1.2078834619870777, -4.138740706870566, 1.0], [1.0, 1.0, -2.553367092372437, -3.3846634190989686, -3.5878410600994517, -3.6556169684023017, -3.7526299662144993, -4.138740706870565, -5.929409923326391, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]]
    expected_velocY = [[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 7.929409923326391, 6.138740706870566, 5.7526299662145, 5.655616968402302, 5.587841060099452, 5.384663419098969, 4.5533670923724365, 1.0, 1.0], [1.0, 6.138740706870566, 3.2078834619870777, 2.4791611759936663, 2.283819155357203, 2.177654512168919, 1.927810946734915, 0.9999999999999999, -2.5533670923724365, 1.0], [1.0, 5.7526299662145, 2.4791611759936663, 1.6215567526545749, 1.3827092521941522, 1.260431799093761, 0.9999999999999999, 0.07218905326508507, -3.3846634190989695, 1.0], [1.0, 5.655616968402302, 2.283819155357203, 1.3827092521941522, 1.1277489418216227, 1.0, 0.739568200906239, -0.1776545121689188, -3.5878410600994517, 1.0], [1.0, 5.587841060099452, 2.177654512168919, 1.260431799093761, 1.0, 0.8722510581783773, 0.6172907478058478, -0.28381915535720337, -3.6556169684023017, 1.0], [1.0, 5.384663419098969, 1.927810946734915, 1.0000000000000002, 0.739568200906239, 0.6172907478058478, 0.378443247345425, -0.47916117599366626, -3.7526299662144993, 1.0], [1.0, 4.5533670923724365, 1.0, 0.07218905326508507, -0.1776545121689188, -0.28381915535720315, -0.47916117599366626, -1.2078834619870777, -4.138740706870566, 1.0], [1.0, 1.0, -2.553367092372437, -3.3846634190989686, -3.5878410600994517, -3.6556169684023017, -3.7526299662144993, -4.138740706870565, -5.929409923326391, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]]
    expected_p = [[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, 0.43557730523590577, 0.30705900766736094, 0.27703994378609287, 0.2702623529558078, 0.2702623529558078, 0.27703994378609287, 0.30705900766736094, 0.43557730523590577, 1.0], [1.0, 0.30705900766736094, 0.13078922007569982, 0.08627066146865311, 0.0756541971498247, 0.0756541971498247, 0.08627066146865311, 0.13078922007569982, 0.30705900766736094, 1.0], [1.0, 0.27703994378609287, 0.08627066146865314, 0.036342731513234756, 0.02411498620319564, 0.02411498620319564, 0.03634273151323476, 0.08627066146865314, 0.27703994378609287, 1.0], [1.0, 0.27026235295580786, 0.0756541971498247, 0.024114986203195646, 0.011340092021033374, 0.011340092021033374, 0.02411498620319564, 0.0756541971498247, 0.27026235295580786, 1.0], [1.0, 0.27026235295580786, 0.0756541971498247, 0.024114986203195646, 0.011340092021033374, 0.011340092021033374, 0.02411498620319564, 0.0756541971498247, 0.27026235295580786, 1.0], [1.0, 0.27703994378609287, 0.08627066146865314, 0.036342731513234756, 0.02411498620319564, 0.02411498620319564, 0.03634273151323476, 0.08627066146865314, 0.27703994378609287, 1.0], [1.0, 0.30705900766736094, 0.13078922007569982, 0.08627066146865311, 0.0756541971498247, 0.0756541971498247, 0.08627066146865311, 0.13078922007569982, 0.30705900766736094, 1.0], [1.0, 0.43557730523590577, 0.30705900766736094, 0.27703994378609287, 0.2702623529558078, 0.2702623529558078, 0.27703994378609287, 0.30705900766736094, 0.43557730523590577, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]]
    expected_div = [[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0], [1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0], [1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0], [1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0], [1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0], [1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0], [1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0], [1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0], [1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 1.0], [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]]

    assert_array_equal(result[0], expected_velocX)
    assert_array_equal(result[1], expected_velocY)
    assert_array_equal(result[2], expected_p)
    assert_array_equal(result[3], expected_div)